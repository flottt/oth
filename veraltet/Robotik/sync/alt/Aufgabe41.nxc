long prev_tick = 0;
long prev_deg = 0;
#define DEG_TO_RPM 166.6667 // converts degrees per millisecond to RPM
#define DATEINAME "blabla.txt"



float calcRpm() {
   long aktTick = CurrentTick();
   long aktRotation = MotorRotationCount(OUT_A);
   float dt = aktTick - prev_tick, deg = aktRotation - prev_deg;
   float rpm = deg * DEG_TO_RPM / dt;
   prev_deg = aktRotation;
   prev_tick = aktTick;
   return rpm;
}

task fahrTask() {
  byte filePointer = NULL;
  string stri;
  float speed;
  unsigned int size = 16, written = 0;
  OnFwd(OUT_AC, 35);
  while(1) {
    speed = calcRpm();
    NumOut(0, LCD_LINE3, speed);
    
    OpenFileAppend(DATEINAME, size, filePointer);
    sprintf(stri, "%10.5f", speed);
    WriteLnString(filePointer, stri, written);
    CloseFile(filePointer);

    Wait(300);
  }
}

task main() {
  short ioReturn = 0;
  byte filePointer = NULL;

  switch (CreateFile(DATEINAME, 4096, filePointer)) {
  case LDR_FILEEXISTS:
    DeleteFile(DATEINAME);
    CreateFile(DATEINAME, 4096, filePointer);
    break;
    
  case LDR_SUCCESS:
    TextOut(0, LCD_LINE2, "passt");
    break;

  case LDR_FILEISFULL:
    TextOut(0, LCD_LINE2, "error: full");
    while(1);
    
  default:
    TextOut(0, LCD_LINE2, "error: ???");
    while(1);
  }
  

  CloseFile(filePointer);
  StartTask(fahrTask);


  TextOut(0, LCD_LINE1, "done");


  while(1) {
  
  }
/*
  int x = 0;
  OnFwd(OUT_A, 60);
  while(1) {
    x = MotorRotationCount(OUT_A);
    NumOut(0, LCD_LINE1, x);
    Wait(20);
  
  }*/
}
   
